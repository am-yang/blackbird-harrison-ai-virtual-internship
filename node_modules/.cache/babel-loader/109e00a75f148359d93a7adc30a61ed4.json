{"ast":null,"code":"var _jsxFileName = \"/Users/anita/Desktop/blackbird-harrison-ai-virtual-internship/src/components/LoginForm/index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Typography from \"@mui/material/Typography\";\nimport logo from \"../../assets/logo.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  const [showAlert, setShowAlert] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordLengthError, setPasswordLengthError] = useState(false);\n  const [passwordCaseError, setPasswordCaseError] = useState(false);\n  const [passwordNumericalError, setPasswordNumericalError] = useState(false);\n  const [passwordSpecialCharError, setPasswordSpecialCharError] = useState(false);\n  let emailIsValid = true;\n  let passwordLengthIsValid = true;\n  let passwordCaseIsValid = true;\n  let passwordNumberIsValid = true;\n  let passwordSpecialCharIsValid = true;\n\n  const validateForm = event => {\n    setEmailError(false);\n    setPasswordLengthError(false);\n    setPasswordCaseError(false);\n    setPasswordNumericalError(false);\n    setPasswordSpecialCharError(false);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\"); // Add validation code here\n\n    var email_validator = require(\"email-validator\");\n\n    if (!email_validator.validate(email)) {\n      setEmailError(true);\n      emailIsValid = false;\n    }\n\n    if (password === null || password.length < 8) {\n      setPasswordLengthError(true);\n      passwordLengthIsValid = false;\n    } else if (!(/[A-Z]/.test(password) && /[a-z]/.test(password))) {\n      setPasswordCaseError(true);\n      passwordCaseIsValid = false;\n    } else if (!/[0-9]/.test(password)) {\n      setPasswordNumericalError(true);\n      passwordNumberIsValid = false;\n    } else if (!/[!@#$%^&*]/.test(password)) {\n      setPasswordSpecialCharError(true);\n      passwordSpecialCharIsValid = false;\n    }\n\n    return emailIsValid && passwordLengthIsValid && passwordCaseIsValid && passwordNumberIsValid && passwordSpecialCharIsValid;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\")\n    });\n\n    if (validateForm(event)) {\n      setShowAlert(\"Login Successful\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [showAlert && /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showAlert,\n      autoHideDuration: 6000,\n      onClose: () => setShowAlert(false),\n      message: showAlert,\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        children: showAlert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: false,\n      sm: 4,\n      md: 7,\n      sx: {\n        backgroundImage: \"url(https://source.unsplash.com/random)\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundColor: t => t.palette.mode === \"light\" ? t.palette.grey[50] : t.palette.grey[900],\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 8,\n      md: 5,\n      component: Paper,\n      elevation: 6,\n      square: true,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          my: 8,\n          mx: 4,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            my: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: logo,\n            width: \"147\",\n            alt: \"harrison.ai\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            error: emailError,\n            ID: \"outlined-error\",\n            helperText: emailError ? \"Please enter valid email address\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            error: passwordLengthError || passwordCaseError || passwordNumericalError || passwordSpecialCharError,\n            ID: \"outlined-error\",\n            helperText: passwordLengthError ? \"Password should be 8 or more characters\" : passwordCaseError ? \"Password should contain minimum 1 character for both uppercase and lowercase letter\" : passwordNumericalError ? \"Password should contain minimum 1 digit of numeric value\" : passwordSpecialCharError ? \"Password should contain minimum 1 special character\" : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LoginForm, \"7KUqevtrxCNZCZDKQFUV3e2sLoc=\");\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/anita/Desktop/blackbird-harrison-ai-virtual-internship/src/components/LoginForm/index.js"],"names":["useState","Alert","Button","TextField","Paper","Box","Grid","Snackbar","Typography","logo","LoginForm","showAlert","setShowAlert","emailError","setEmailError","passwordLengthError","setPasswordLengthError","passwordCaseError","setPasswordCaseError","passwordNumericalError","setPasswordNumericalError","passwordSpecialCharError","setPasswordSpecialCharError","emailIsValid","passwordLengthIsValid","passwordCaseIsValid","passwordNumberIsValid","passwordSpecialCharIsValid","validateForm","event","preventDefault","data","FormData","currentTarget","email","get","password","email_validator","require","validate","length","test","handleSubmit","console","log","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","my","mx","display","flexDirection","alignItems","mt","mb"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport Alert from \"@mui/material/Alert\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport Typography from \"@mui/material/Typography\";\nimport logo from \"../../assets/logo.svg\";\n\nexport default function LoginForm() {\n  const [showAlert, setShowAlert] = useState(false);\n  const [emailError, setEmailError] = useState(false);\n  const [passwordLengthError, setPasswordLengthError] = useState(false);\n  const [passwordCaseError, setPasswordCaseError] = useState(false);\n  const [passwordNumericalError, setPasswordNumericalError] = useState(false);\n  const [passwordSpecialCharError, setPasswordSpecialCharError] =\n    useState(false);\n\n  let emailIsValid = true;\n  let passwordLengthIsValid = true;\n  let passwordCaseIsValid = true;\n  let passwordNumberIsValid = true;\n  let passwordSpecialCharIsValid = true;\n\n  const validateForm = (event) => {\n    setEmailError(false);\n    setPasswordLengthError(false);\n    setPasswordCaseError(false);\n    setPasswordNumericalError(false);\n    setPasswordSpecialCharError(false);\n\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    const email = data.get(\"email\");\n    const password = data.get(\"password\");\n\n    // Add validation code here\n    var email_validator = require(\"email-validator\");\n\n    if (!email_validator.validate(email)) {\n      setEmailError(true);\n      emailIsValid = false;\n    }\n\n    if (password === null || password.length < 8) {\n      setPasswordLengthError(true);\n      passwordLengthIsValid = false;\n    } else if (!(/[A-Z]/.test(password) && /[a-z]/.test(password))) {\n      setPasswordCaseError(true);\n      passwordCaseIsValid = false;\n    } else if (!/[0-9]/.test(password)) {\n      setPasswordNumericalError(true);\n      passwordNumberIsValid = false;\n    } else if (!/[!@#$%^&*]/.test(password)) {\n      setPasswordSpecialCharError(true);\n      passwordSpecialCharIsValid = false;\n    }\n\n    return (\n      emailIsValid &&\n      passwordLengthIsValid &&\n      passwordCaseIsValid &&\n      passwordNumberIsValid &&\n      passwordSpecialCharIsValid\n    );\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    console.log({\n      email: data.get(\"email\"),\n      password: data.get(\"password\"),\n    });\n    if (validateForm(event)) {\n      setShowAlert(\"Login Successful\");\n    }\n  };\n\n  return (\n    <>\n      {showAlert && (\n        <Snackbar\n          open={showAlert}\n          autoHideDuration={6000}\n          onClose={() => setShowAlert(false)}\n          message={showAlert}\n        >\n          <Alert>{showAlert}</Alert>\n        </Snackbar>\n      )}\n      <Grid\n        item\n        xs={false}\n        sm={4}\n        md={7}\n        sx={{\n          backgroundImage: \"url(https://source.unsplash.com/random)\",\n          backgroundRepeat: \"no-repeat\",\n          backgroundColor: (t) =>\n            t.palette.mode === \"light\"\n              ? t.palette.grey[50]\n              : t.palette.grey[900],\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\",\n        }}\n      />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <Box\n          sx={{\n            my: 8,\n            mx: 4,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Box\n            sx={{\n              my: 2,\n            }}\n          >\n            <img src={logo} width=\"147\" alt=\"harrison.ai\" />\n          </Box>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              error={emailError}\n              ID=\"outlined-error\"\n              helperText={emailError ? \"Please enter valid email address\" : \"\"}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              error={\n                passwordLengthError ||\n                passwordCaseError ||\n                passwordNumericalError ||\n                passwordSpecialCharError\n              }\n              ID=\"outlined-error\"\n              helperText={\n                passwordLengthError\n                  ? \"Password should be 8 or more characters\"\n                  : passwordCaseError\n                  ? \"Password should contain minimum 1 character for both uppercase and lowercase letter\"\n                  : passwordNumericalError\n                  ? \"Password should contain minimum 1 digit of numeric value\"\n                  : passwordSpecialCharError\n                  ? \"Password should contain minimum 1 special character\"\n                  : \"\"\n              }\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n          </Box>\n        </Box>\n      </Grid>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}